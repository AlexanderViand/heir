// RUN: heir-opt --new-layout-propagation --fold-convert-layout-into-assign-layout %s | FileCheck %s

// CHECK-DAG: #kernel = #secret.kernel<name = "MatvecDiagonal", force = false>
// CHECK-DAG: #[[rm_layout1:.*]] = #tensor_ext.new_layout<"{ [i0] -> [ct, slot] : ct = 0 and (-i0 + slot) mod 16 = 0 and 0 <= i0 <= 9 and 0 <= slot <= 1023 }">
// CHECK-DAG: #[[rm_layout:.*]] = #tensor_ext.new_layout<"{ [i0] -> [ct, slot] : ct = 0 and (-i0 + slot) mod 16 = 0 and 0 <= i0 <= 15 and 0 <= slot <= 1023 }">
// CHECK: @matvec
// CHECK-SAME: %[[arg0:.*]]: !secret.secret<tensor<16xf32>> {tensor_ext.layout = #[[rm_layout]]}) ->
func.func @matvec(%arg0: !secret.secret<tensor<16xf32>>) -> !secret.secret<tensor<10xf32>> {
  %cst = arith.constant dense<0.000000e+00> : tensor<10xf32>
  // CHECK: %[[bias:.*]] = arith.constant dense<0.00
  // CHECK: %[[cst:.*]] = arith.constant
  // CHECK-SAME: tensor<10x16xf32>

  // Assign a layout to the matrix and bias
  // CHECK-DAG: tensor_ext.assign_layout %[[cst]]
  // CHECK-DAG: tensor_ext.assign_layout %[[bias]]
  %cst_0 = arith.constant dense<"0xtensor<10x16xf32>
  %0 = secret.generic(%arg0 : !secret.secret<tensor<16xf32>>) {
  ^body(%input0: tensor<16xf32>):
    // CHECK: linalg.matvec
    // CHECK-SAME: secret.kernel = #kernel
    %1 = linalg.matvec ins(%cst_0, %input0 : tensor<10x16xf32>, tensor<16xf32>) outs(%cst : tensor<10xf32>) -> tensor<10xf32>
    secret.yield %1 : tensor<10xf32>
    // CHECK: secret.yield
    // CHECK-NEXT: -> (!secret.secret<tensor<10xf32>> {tensor_ext.layout = #[[rm_layout1]]})
  } -> !secret.secret<tensor<10xf32>>
  return %0 : !secret.secret<tensor<10xf32>>
}
